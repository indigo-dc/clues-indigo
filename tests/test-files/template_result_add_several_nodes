description: 'TOSCA test for launching a Virtual Elastic Cluster. It will launch a
  single front-end that will be in change of managing the elasticity using the specified
  LRMS (torque, sge, slurm and condor) workload.

  '
imports:
- {indigo_custom_types: 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml'}
topology_template:
  node_templates:
    elastic_cluster_front_end:
      properties: {deployment_id: orchestrator_deployment_id}
      requirements:
      - {lrms: torque_front_end}
      - {wn: wn_node}
      type: tosca.nodes.indigo.ElasticCluster
    torque_front_end:
      properties:
        wn_ips:
          get_attribute: [torque_wn, private_address]
      requirements:
      - {host: torque_server}
      type: tosca.nodes.indigo.LRMS.FrontEnd.Torque
    torque_server:
      capabilities:
        endpoint:
          properties: {network_name: PUBLIC}
        host:
          properties: {mem_size: 1 GB, num_cpus: 1}
        os:
          properties: {type: linux}
      type: tosca.nodes.indigo.Compute
    torque_wn:
      capabilities:
        endpoint:
          properties:
            dns_name: [test_node_1, test_node_1, test_node_2]
        host:
          properties: {mem_size: 1 GB, num_cpus: 1}
        os:
          properties: {type: linux}
        scalable:
          properties: {count: 3}
      type: tosca.nodes.indigo.Compute
    wn_node:
      capabilities:
        wn:
          properties: {max_instances: 5, min_instances: 0}
      properties:
        front_end_ip:
          get_attribute: [torque_server, private_address, 0]
      requirements:
      - {host: torque_wn}
      type: tosca.nodes.indigo.LRMS.WorkerNode.Torque
  outputs:
    cluster_creds:
      value:
        get_attribute: [torque_server, endpoint, credential, 0]
    cluster_ip:
      value:
        get_attribute: [torque_server, public_address, 0]
tosca_definitions_version: tosca_simple_yaml_1_0
